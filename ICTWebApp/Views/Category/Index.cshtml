@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging
@model PagingList<Category>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "ประเภทสินค้า";
}
ประเภทสินค้าทั้งหมด  @Model.TotalRecordCount รายการ
<form method="get" class="form-inline">

    <input name="filter" class="form-control" value="@Model.RouteValue["Filter"]" />&nbsp;

    <button type="submit" class="btn btn-info">Search</button>

</form>
<br/>
<a class="btn btn-primary btn-lg" asp-action="Create">เพิ่มประเภทสินค้า</a>
<br />
<br />
<nav aria-label="Products navigation example">
    <vc:pager paging-list="@Model"></vc:pager>
</nav>

<table class="table">
    <tr>
        <th>
            @Html.SortableHeaderFor(model => model.CategoryID, "CategoryID")
        </th>
        <th>
            @Html.SortableHeaderFor(model => model.CategoryName, "-CategoryName")
        </th>
        <th>เครื่องมือ</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CategoryID">แก้ไข</a>
                <a asp-action="Delete" asp-route-id="@item.CategoryID">ลบ</a>
            </td>
        </tr>
    }
</table>

<nav aria-label="Products navigation example">
    <vc:pager paging-list="@Model" />
</nav>